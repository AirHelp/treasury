// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AirHelp/treasury/backend (interfaces: BackendAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "github.com/AirHelp/treasury/types"
	gomock "go.uber.org/mock/gomock"
)

// MockBackendAPI is a mock of BackendAPI interface.
type MockBackendAPI struct {
	ctrl     *gomock.Controller
	recorder *MockBackendAPIMockRecorder
}

// MockBackendAPIMockRecorder is the mock recorder for MockBackendAPI.
type MockBackendAPIMockRecorder struct {
	mock *MockBackendAPI
}

// NewMockBackendAPI creates a new mock instance.
func NewMockBackendAPI(ctrl *gomock.Controller) *MockBackendAPI {
	mock := &MockBackendAPI{ctrl: ctrl}
	mock.recorder = &MockBackendAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackendAPI) EXPECT() *MockBackendAPIMockRecorder {
	return m.recorder
}

// DeleteObject mocks base method.
func (m *MockBackendAPI) DeleteObject(arg0 *types.DeleteObjectInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteObject indicates an expected call of DeleteObject.
func (mr *MockBackendAPIMockRecorder) DeleteObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObject", reflect.TypeOf((*MockBackendAPI)(nil).DeleteObject), arg0)
}

// GetObject mocks base method.
func (m *MockBackendAPI) GetObject(arg0 *types.GetObjectInput) (*types.GetObjectOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0)
	ret0, _ := ret[0].(*types.GetObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObject indicates an expected call of GetObject.
func (mr *MockBackendAPIMockRecorder) GetObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockBackendAPI)(nil).GetObject), arg0)
}

// GetObjects mocks base method.
func (m *MockBackendAPI) GetObjects(arg0 *types.GetObjectsInput) (*types.GetObjectsOuput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjects", arg0)
	ret0, _ := ret[0].(*types.GetObjectsOuput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjects indicates an expected call of GetObjects.
func (mr *MockBackendAPIMockRecorder) GetObjects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjects", reflect.TypeOf((*MockBackendAPI)(nil).GetObjects), arg0)
}

// PutObject mocks base method.
func (m *MockBackendAPI) PutObject(arg0 *types.PutObjectInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutObject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutObject indicates an expected call of PutObject.
func (mr *MockBackendAPIMockRecorder) PutObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutObject", reflect.TypeOf((*MockBackendAPI)(nil).PutObject), arg0)
}
